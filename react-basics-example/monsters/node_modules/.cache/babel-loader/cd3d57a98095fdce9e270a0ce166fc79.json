{"ast":null,"code":"var _jsxFileName = \"/Users/zach/Desktop/react-dev-example/react-basics/monsters/src/App.js\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // override constructor by calling method\n  constructor() {\n    // super calls constructor method on our parent 'Component' Class\n    super(); // super gives us access to this.state obj on the 'Component' Class\n\n    this.handleChange = e => {\n      this.setState({\n        searchField: e.target.value,\n        title: e.target.value\n      });\n    };\n\n    this.state = {\n      // we can now set a property on the state obj\n      monsters: [// initialize empty array in state\n      ],\n      searchField: \"\",\n      title: \"monsters\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(users => this.setState({\n      monsters: users\n    }));\n  } // The arrow function can bind \"this\" to our \"App\" class when it is instantiated because because it is lexically scoped\n\n\n  render() {\n    // destructuring state object, setting constants to state properties\n    const {\n      monsters,\n      searchField,\n      title\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase())); // render jsx\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(SearchBox, {\n      placeholder: \"search monsters\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zach/Desktop/react-dev-example/react-basics/monsters/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","handleChange","e","setState","searchField","target","value","title","state","monsters","componentDidMount","fetch","then","res","json","users","render","filteredMonsters","filter","monster","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,4CAAzB;AACA,SAASC,SAAT,QAA0B,8CAA1B;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1B;AACAI,EAAAA,WAAW,GAAG;AACZ;AACA,YAFY,CAIZ;;AAJY,SAsBdC,YAtBc,GAsBEC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAxB;AAA+BC,QAAAA,KAAK,EAAEL,CAAC,CAACG,MAAF,CAASC;AAA/C,OAAd;AACD,KAxBa;;AAKZ,SAAKE,KAAL,GAAa;AACX;AACAC,MAAAA,QAAQ,EAAE,CACR;AADQ,OAFC;AAKXL,MAAAA,WAAW,EAAE,EALF;AAMXG,MAAAA,KAAK,EAAE;AANI,KAAb;AAQD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,KAAD,IAAW,KAAKZ,QAAL,CAAc;AAAEM,MAAAA,QAAQ,EAAEM;AAAZ,KAAd,CAFnB;AAGD,GArByB,CAuB1B;;;AAKAC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEP,MAAAA,QAAF;AAAYL,MAAAA,WAAZ;AAAyBG,MAAAA;AAAzB,QAAmC,KAAKC,KAA9C;AACA,UAAMS,gBAAgB,GAAGR,QAAQ,CAACS,MAAT,CAAiBC,OAAD,IACvCA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoClB,WAAW,CAACiB,WAAZ,EAApC,CADuB,CAAzB,CAHO,CAMP;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,KAAL,CADF,eAEE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,iBADd;AAEE,MAAA,YAAY,EAAE,KAAKN,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAME,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEgB,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AA7CyB;;AA+C5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  // override constructor by calling method\n  constructor() {\n    // super calls constructor method on our parent 'Component' Class\n    super();\n\n    // super gives us access to this.state obj on the 'Component' Class\n    this.state = {\n      // we can now set a property on the state obj\n      monsters: [\n        // initialize empty array in state\n      ],\n      searchField: \"\",\n      title: \"monsters\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  // The arrow function can bind \"this\" to our \"App\" class when it is instantiated because because it is lexically scoped\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value, title: e.target.value });\n  };\n\n  render() {\n    // destructuring state object, setting constants to state properties\n    const { monsters, searchField, title } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    // render jsx\n    return (\n      <div className=\"App\">\n        <h1>{title}</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}